//DFS ON DIRECTED OR UNDIRECTED GRAPH
    void DFS(vector<bool>& visited,unordered_map<int,vector<int>>& adj,int u){
        visited[u] = true;

        for(auto v : adj[u]){
            if(!visited[v]){
                DFS(visited,adj,v);
            }
        }
    }


//BFS on DIRECTED OR UNDIRECTED GRAPH

vector<int> BFS(int V, unordered_map<int,vector<int>>& adj) {
        queue<int> q;
        q.push(0);
        
        vector<bool> visited(V,false);
        visited[0] = true;
        
        vector<int> ans;
        ans.push_back(0);
        
        while(!q.empty()){
            int u = q.front();q.pop();
            
            for(int v : adj[u]){
                if(!visited[v]){
                    q.push(v);
                    ans.push_back(v);
                    visited[v] = true;
                }
            }
        }
        
        return ans;
    }

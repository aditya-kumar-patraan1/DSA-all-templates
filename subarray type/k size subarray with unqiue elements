class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        unordered_map<int,int> mymap;
        int n = nums.size();
        long long sum = 0;
        int j = 0,i = 0;
        long long maxi = 0;

        while(j<n){
            sum += nums[j];
            mymap[nums[j]]++;

            if(j-i+1 > k){
                sum -= nums[i];
                mymap[nums[i]]--;
                if(mymap[nums[i]] == 0){
                    mymap.erase(nums[i]);
                }
                i++;  
            }

            if(k==mymap.size() && k == (j-i+1)){
                maxi = max(maxi,sum);
            }

            j++;
        }

        return maxi;
    }
};
